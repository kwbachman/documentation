// Initialize database with data

// oc rsh <mongodb-pod>
// mongo foliodb -u user -p password
// or from remote workstation
// mongo "mongodb://dbuser:dbusernnn@192.168.1.2:27107/foliodb"
// > show collections (I think the collections are auto-created when clicking login button but they are empty)

// > db.investments.save({ investor: 'kevin', password: 'kevin1', investments: [{  symbol: 'btc',  shares: 0.028644 }, {  symbol: 'miota',  shares: 100 }, {  symbol: 'eth',  shares: 0.25 }]})
// > db.investments.find()

// The users document can be initialized by calling the register api as shown at the bottom of the users.js model or at the bottom this document
// > db.users.find()

// Some other sample queries below:
// db.inventory.insertMany( [
//    { item: "journal", qty: 25, size: { h: 14, w: 21, uom: "cm" }, status: "A" },
//    { item: "notebook", qty: 50, size: { h: 8.5, w: 11, uom: "in" }, status: "A" },
//    { item: "paper", qty: 100, size: { h: 8.5, w: 11, uom: "in" }, status: "D" },
//    { item: "planner", qty: 75, size: { h: 22.85, w: 30, uom: "cm" }, status: "D" },
//    { item: "postcard", qty: 45, size: { h: 10, w: 15.25, uom: "cm" }, status: "A" }
// ]);
// 
// var cursor = db.collection('investments').find({ 
//   username: "kevin"
// }).project({ password: 1 });
// 
// db.investments.find( { username: "kevin" }, { password: 1 } )
// 
// db.investments.find({ username: "kevin" }, { password: 1, _id: 0 })
// 


// Ensure to manually call the register api from Postman with the following parameters to prime the user document:
// POST -- http://localhost/api/register
// BODY --
// x-www-form-urlencoded
// username = kevin
// password = xxxxxxxx
